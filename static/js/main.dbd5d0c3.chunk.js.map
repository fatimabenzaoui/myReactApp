{"version":3,"sources":["components/NavBar.jsx","components/Footer.jsx","components/stellarApp/ApiApodNasa.jsx","routes/StellarApp.jsx","components/todoListApp/TasksList.jsx","components/todoListApp/Task.jsx","routes/TodoListApp.jsx","constants/tweets.js","components/twitterApp/Tweet.jsx","helpers/parse.js","components/twitterApp/TweetBox.jsx","components/twitterApp/PublishTweet.jsx","routes/TwitterApp.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","useState","isNavCollapsed","setIsNavCollapsed","className","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","to","Footer","href","target","rel","apiKey","process","ApiApodNasa","media","setMedia","useEffect","a","url","fetch","res","json","data","console","log","fetchMedia","media_type","src","alt","title","style","height","frameBorder","allow","allowFullScreen","moment","date","format","explanation","StellarApp","NavBar","TasksList","props","tasksList","tasks","map","key","text","value","onChange","e","updateTask","icon","deleteTask","duration","easing","library","add","faTrash","Task","handleChange","setState","currentTask","Date","now","addTask","preventDefault","newTask","state","filteredTasks","filter","task","handleFocus","_input","placeholder","onSubmit","this","ref","t","onFocus","onBlur","Component","TodoListApp","tweets","avatar","username","fullname","content","Tweet","isFocus","index","remove","width","name","onMouseEnter","onMouseLeave","split","word","str","match","shouldBeHighLighted","includes","substring","defaultProps","TweetBox","handleSubmit","publish","length","_textarea","rows","disabled","PublishTweet","tweet","i","TwitterApp","App","component","path","exact","Boolean","window","location","hostname","root","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbd5d0c3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg fixed-top\" id=\"mainNav\">\r\n            <span className=\"navbar-brand ml-3 text-primary\">myReactApp</span>\r\n            <div className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded={!isNavCollapsed ? true : false} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                <i className=\"fa fa-bars text-primary\"></i>\r\n            </div>\r\n            <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarResponsive\">\r\n                <ul className=\"navbar-nav ml-auto\" id=\"navbar\">\r\n                    <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/myReactApp-02/\">nasaStellarApp</Link></li>\r\n                    <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/myReactApp-02/todolistapp\">todoListApp</Link></li>\r\n                    <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/myReactApp-02/twitterapp\">twitterApp</Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <div className=\"row\">\r\n            <div className=\"col-md-12 mt-5 divfooter\">\r\n                <footer>\r\n                    <div className=\"partie-footer\">\r\n                        <ul className=\"reseauxsociaux\">\r\n                            <li><a href=\"https://github.com/fatimabenzaoui\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-github-square\"></i></a></li>\r\n                            <li><a href=\"https://www.linkedin.com/in/fatima-benzaoui\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n                            <li><a href=\"https://www.facebook.com/benzaouifatima\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-facebook-square\"></i></a></li>\r\n                            <li><a href=\"https://www.instagram.com/fatimabenzaoui\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-instagram\"></i></a></li>\r\n                            <li><a href=\"https://twitter.com/fatimabenzaoui\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-twitter-square\"></i></a></li>\r\n                        </ul>\r\n                        <div className=\"copyright text-primary\">&copy; 2020 | Fatima Benzaoui | All Rights Reserved</div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nconst ApiApodNasa = () => {\r\n  const [media, setMedia] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMedia();\r\n\r\n    async function fetchMedia() {\r\n      const url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      setMedia(data);\r\n      console.log(data);\r\n    }\r\n  }, []);\r\n\r\n  if (!media) return <div />;\r\n\r\n  return (\r\n    <div className=\"api-apod-nasa container text-center mt-5\">\r\n      {media.media_type === \"image\" ? (\r\n        <img src={media.url} alt={media.title} className=\"w-100\" />\r\n      ) : (\r\n        <iframe\r\n          style={{ height: 650 }}\r\n          title=\"space-video\"\r\n          src={media.url}\r\n          frameBorder=\"0\"\r\n          allow=\"encrypted-media\"\r\n          allowFullScreen\r\n          className=\"w-100 border\"\r\n        />\r\n      )}\r\n      <div>\r\n        <h2>{media.title}</h2>\r\n        <p className=\"text-center\">\r\n          {moment(media.date).format(\"DD - MM - YYYY\")}\r\n        </p>\r\n        <p className=\"text-justify\">{media.explanation}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiApodNasa;\r\n","import React from 'react';\r\n\r\nimport NavBar from '../components/NavBar';\r\nimport Footer from '../components/Footer';\r\nimport ApiApodNasa from \"../components/stellarApp/ApiApodNasa\";\r\n\r\nconst StellarApp = () => {\r\n    return ( \r\n        <div>\r\n            <NavBar />\r\n            <ApiApodNasa />\r\n            <Footer />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default StellarApp;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nimport './TasksList.css';\r\n\r\nconst TasksList = (props) => {\r\n    // Récupère les props des tâches\r\n    const tasks = props.tasks;\r\n    // Boucle map() sur chacune des tâches\r\n    const tasksList = tasks.map(({ key, text }) => {\r\n        return (\r\n            <div className=\"list\" key={ key }>\r\n                <p>\r\n                    <input \r\n                        type=\"text\" \r\n                        id={ key } \r\n                        value={ text } \r\n                        onChange={ (e) => { props.updateTask(e.target.value, key) }}\r\n                    />\r\n                    <span>\r\n                        <FontAwesomeIcon \r\n                            className=\"icon\"\r\n                            icon=\"trash\"\r\n                            onClick={ () => { props.deleteTask(key) }} \r\n                        />\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            <FlipMove \r\n                duration={ 250 } \r\n                easing=\"ease-in-out\"\r\n                >\r\n                { tasksList }\r\n            </FlipMove>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default TasksList;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TasksList from \"./TasksList\";\r\n\r\nlibrary.add(faTrash);\r\n\r\nclass Task extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            currentTask: {\r\n                text: \"\",\r\n                key: \"\",\r\n            },\r\n        };\r\n    }\r\n\r\n    // METHODE1 : modifie l'état de l'objet currentTask\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            currentTask: {\r\n                // Récupère la valeur tapée ds l'input\r\n                text: e.target.value,\r\n                // Définit la date comme clé unique\r\n                key: Date.now(),\r\n            },\r\n        });\r\n    }\r\n\r\n    // METHODE2 : ajoute une tâche à la liste existante\r\n    addTask = (e) => {\r\n        // Empêche le rechargement de la page\r\n        e.preventDefault();\r\n        // Stockage de l'état de l'objet currentTask ds une variable newTask\r\n        const newTask = this.state.currentTask;\r\n        // Si champ non vide\r\n        if (newTask.text !== \"\") {\r\n            // Copie de l'état de la liste des tâches + ajoute la nelle tâche\r\n            const tasks = [...this.state.tasks, newTask];\r\n            // Modification de l'état des tâches\r\n            this.setState({\r\n                tasks,\r\n                // Réinitialisation de l'objet currentTask\r\n                currentTask: {\r\n                    text: \"\",\r\n                    key: \"\",\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    // METHODE3 : supprime une tâche avec filter()\r\n    deleteTask = (key) => {\r\n        const filteredTasks = this.state.tasks.filter((task) => task.key !== key);\r\n        // Modifie l'état des tâches\r\n        this.setState({\r\n            tasks: filteredTasks,\r\n        });\r\n    }\r\n \r\n    // METHODE4 : permet de modifier une tâche \r\n    updateTask = (text, key) => {\r\n        //console.log(\"tasks:\" + this.state.tasks);\r\n        // Récupère l'état des tâches\r\n        const tasks = this.state.tasks;\r\n        // Boucle sur chacune des tâches\r\n        tasks.map(task => {\r\n            // Si la clé de la tâche est la même clé\r\n            if (task.key === key) {\r\n            //console.log(task.key + \"    \" + key)\r\n            // contenu de la tâche = contenu\r\n                return task.text = text;\r\n            } else { \r\n                return null; \r\n            }\r\n        });\r\n        // Modifie l'état des tâches\r\n        this.setState({\r\n            tasks,\r\n        });\r\n    }\r\n\r\n    // METHODE5 : vide le placeholder au focus\r\n    handleFocus = ({ type }) => {\r\n        this._input.placeholder = type === 'focus' ? '' : 'Saisir une tâche';\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"col-sm-12 col-md-6 mx-auto\">\r\n                <form id=\"to-do-form\" className=\"w-100 form-inline\" onSubmit={ this.addTask }>\r\n                    <input type=\"text\" placeholder=\"Enter a task\" className=\"form-control shadow-none w-75 mx-auto\"\r\n                        value={ this.state.currentTask.text }\r\n                        onChange={ this.handleChange }\r\n                        ref={(t) => (this._input = t)}\r\n                        onFocus={ this.handleFocus }\r\n                        onBlur={ this.handleFocus }\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-dark shadow-none mx-auto w-25\">ADD</button>\r\n                </form>\r\n                <p>{this.state.tasks.text}</p>\r\n                <TasksList\r\n                    tasks={ this.state.tasks }\r\n                    deleteTask={ this.deleteTask }\r\n                    updateTask={ this.updateTask }\r\n                />\r\n            </div>\r\n            </>                   \r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from \"react\";\r\n\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Task from \"../components/todoListApp/Task\";\r\n\r\nconst TodoListApp = () => {\r\n  return (\r\n    <div className=\"mt-5 pt-5\">\r\n      <NavBar />\r\n      <Task />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListApp;\r\n","const tweets = [{\r\n    avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png',\r\n    username: 'Bulbizarre',\r\n    fullname: 'Dan Abramov',\r\n    content: 'lorem ipsum lorem ipsum lorem ipsum lorem ipsum http://youpi.com ipsum lorem ipsum lorem ipsum ',\r\n    //date: '12/12/2016',\r\n}, {\r\n    avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png',\r\n    username: 'Carapuce',\r\n    fullname: 'Pierre Dault',\r\n    content: 'lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum @toto ipsum lorem ipsum lorem ipsum lorem ipsum ',\r\n    date: '12/12/2019',\r\n}, {\r\n    avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png',\r\n    username: 'Sabelette',\r\n    fullname: 'Sophie Dupont',\r\n    content: 'lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum #love #peace #paradise',\r\n    date: '17/17/2020',\r\n}];\r\n\r\nexport default tweets;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { highLightedStr } from '../../helpers';\r\n\r\nclass Tweet extends Component {\r\n    \r\n    static propTypes = {\r\n        username: PropTypes.string.isRequired,\r\n        fullname: PropTypes.string.isRequired,\r\n        date: PropTypes.string,\r\n        avatar: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        remove: PropTypes.func.isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        date: moment().format('DD/MM/YYYY'),\r\n    };\r\n\r\n    state = {\r\n        isFocus: false,\r\n    };\r\n\r\n    handleFocus = ({ type }) => {\r\n        this.setState({ isFocus: type === 'mouseenter' })\r\n    };\r\n\r\n    render() {\r\n        const { avatar, fullname, content, username, date, index, remove } = this.props;\r\n        const { isFocus } = this.state;\r\n\r\n        return (\r\n            <div className=\"tweet\">\r\n                <div className=\"container w-100 tweetbox p-3\">\r\n                    <img src={ avatar } alt=\"avatar\" className=\"avatar\" width=\"40px\" height=\"40px\" />\r\n                    <strong>{ fullname }</strong>\r\n                    <small className=\"gray\"> - @{ username }</small>\r\n                    <small className=\"gray date\"> - { date } </small>\r\n                    {username === \"Pikachu\" && (\r\n                        <FontAwesome\r\n                            className=\"gray trash\"\r\n                            name={ isFocus ? \"trash\" : \"trash-o\" }\r\n                            onMouseEnter={ this.handleFocus }\r\n                            onMouseLeave={ this.handleFocus }\r\n                            onClick={ () => remove(index) }\r\n                        />\r\n                    )}\r\n                    <div className=\"content\">\r\n                        <p className=\"contenutweet\">{ highLightedStr(content) }</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst shouldBeHighLighted = (str) =>\r\n    str.match(/((@)|(#)|(https?:\\/\\/))[\\w.]+/gi);\r\n\r\nconst highLightedStr = (str) =>\r\n    str\r\n    .split(/\\s/g)\r\n    .map((word, index) => {\r\n        if (shouldBeHighLighted(word)) {\r\n            if (word.includes('@')) {\r\n                return (\r\n                    <Link\r\n                        className=\"highLight\"\r\n                        to={`/tweets/${word.substring(1)}`}\r\n                        key={index}\r\n                        >{word} </Link>\r\n                );\r\n            }\r\n        return <a key={index} className=\"highLight\" href=\"{word}\">{word} </a>\r\n        }\r\n        return <span key={index}>{word} </span>\r\n    });\r\n\r\nexport {\r\n    shouldBeHighLighted,\r\n    highLightedStr,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TweetBox extends Component {\r\n\r\n    static propTypes = {\r\n        publish: PropTypes.func.isRequired,\r\n    };\r\n    state = {\r\n        value: '',\r\n    };\r\n    handleChange = ({ target: { value } }) => {\r\n        this.setState({ value });\r\n    };\r\n    handleSubmit = () => {\r\n        const { value } = this.state;\r\n        let { publish } = this.props;\r\n\r\n        if (value.length && value.length <= 140){\r\n            publish(value);\r\n\r\n            this.setState({ value: '' });\r\n        }\r\n    };\r\n    handleFocus = ({ type }) => {\r\n        this._textarea.placeholder = type === 'focus' ? '' : 'Composez votre tweet';\r\n    };\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <>\r\n            <div className=\"container w-100 tweetbox bg-light p-3 pb-5\">\r\n                <textarea\r\n                    rows={3}\r\n                    placeholder=\"Composez votre tweet\"\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    // className={value.length > 140 && 'alert'}\r\n                    className={value.length > 140 ? 'alert' : value}\r\n                    ref={t => this._textarea = t}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleFocus}\r\n                />\r\n                {/* Création d'un compteur qui se décrémente */}\r\n                <div className=\"action\">\r\n                    \r\n                    {/* Création d'un bouton désactivé si textarea vide ou > 140 caractères */}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-small float-right\"\r\n                        disabled={!value.length || value.length > 140}\r\n                        onClick={this.handleSubmit}\r\n                    >\r\n                    Tweet\r\n                    </button>\r\n                    <small><span className=\"count mt-2 float-right\">{140 - value.length}</span></small>                   \r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\nexport default TweetBox;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { tweets } from '../../constants';\r\nimport Tweet from './Tweet';\r\nimport TweetBox from './TweetBox';\r\n\r\nimport './PublishTweet.css';\r\n\r\nclass PublishTweet extends Component {\r\n    state = {\r\n        tweets,\r\n    };\r\n\r\n    publish = (tweet) => {\r\n        const { tweets } = this.state;\r\n\r\n        this.setState({\r\n            tweets: [{\r\n                avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png',\r\n                username: 'Pikachu',\r\n                fullname: 'Toto Zapatta',\r\n                content: tweet,\r\n                date: moment().format('DD/MM/YYYY'),\r\n            },\r\n            ...tweets,\r\n        ],\r\n        });\r\n    };\r\n\r\n    remove = (index) => {\r\n        const { tweets } = this.state;\r\n\r\n        this.setState({ tweets: tweets.filter((tweet, i) => i !== index) });\r\n    };\r\n\r\n    render() {\r\n        const { tweets } = this.state;\r\n\r\n        return (\r\n            <div className=\"container-fluid text-center mt-3 w-100\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-4 mx-auto\">\r\n                        <TweetBox publish={this.publish} />\r\n                        <div className=\"tweets\">\r\n                            {tweets.map((tweet, index) => (\r\n                                <Tweet\r\n                                    key={index}\r\n                                    index={index}\r\n                                    remove={this.remove}\r\n                                    {...tweet}                       \r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>                   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PublishTweet;","import React from 'react';\r\n\r\nimport NavBar from '../components/NavBar';\r\nimport Footer from \"../components/Footer\";\r\nimport PublishTweet from \"../components/twitterApp/PublishTweet\";\r\n\r\nconst TwitterApp = () => {\r\n\r\n    return (\r\n      <div className=\"mt-5 pt-2\">\r\n        <NavBar />\r\n        <PublishTweet />\r\n        <Footer />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TwitterApp;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.css';\n\nimport StellarApp from './routes/StellarApp';\nimport TodoListApp from './routes/TodoListApp';\nimport TwitterApp from './routes/TwitterApp';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route component={StellarApp} path=\"/myReactApp/\" exact />\n      <Route component={TodoListApp} path=\"/myReactApp/todolistapp\" />\n      <Route component={TwitterApp} path=\"/myReactApp/twitterapp\" />\n    </BrowserRouter>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}